---
import DB from '@utils/db.js'
import type { Spotify } from '@utils/spotify.js'

const { user } = Astro.locals

if (!user) return Astro.redirect('/401')

interface Props {
    track: Spotify.Track
}

const { track } = Astro.props

const groupId = Astro.params.group_id
const playlistId = Astro.params.playlist_id

if (!groupId || !playlistId) return Astro.redirect('/401')

const image = track.album.images[1].url

const sql = 'SELECT * FROM `song_ratings` WHERE `song_id` = ? AND `group_id` = ? AND `playlist_id` = ?'
const args = [track.id, groupId, playlistId]

async function getRatings() {
    const result = await DB.execute({ sql, args });

    if (result.rows.length === 0) return []

    return result.rows.map((row) => {
        if (typeof row.rating !== 'number') return null

        return {
            user_id: row.user_id,
            rating: row.rating,
        }
    }).filter(Boolean)
}

const ratings = await getRatings()

const myRating = ratings.find((rating) => rating?.user_id === user.id)
const averageRating = ratings.length > 0 ? ratings.reduce((acc, rating) => acc + (rating?.rating || 0), 0) / ratings.length : 'No ratings'
---
<div class="p-2 grid md:grid-cols-3 justify-between gap-2 border-b border-gray-700">
    <div class="flex gap-2 md:col-span-2">
        { image && <img src={ image } class="object-cover h-16 rounded-lg" /> }
        <div>
            <h5 class="mb-2 text-2xl font-bold tracking-tight">{ track.name }</h5>
            <p class="font-normal text-gray-300">
                { track.artists.map((artist) => (
                    <span class="inline-block mr-2 text-sm font-medium text-gray-700 dark:text-gray-400">{ artist.name }</span>
                )) }
            </p>
        </div>
    </div>
    <div class="flex md:justify-end">
        <div>
            <p>Average: { averageRating }</p>
            <form action="/api/song/rating/set" method="post" class="flex gap-2">
                <input type="hidden" name="song_id" value={ track.id } />
                <input type="hidden" name="group_id" value={ groupId } />
                <input type="hidden" name="playlist_id" value={ playlistId } />
                <input type="number" class=" w-32 px-2 bg-gray-200 rounded" name="rating" min="1" max="10" value={ myRating?.rating || "0" }} />
                { !Boolean(myRating) && <button type="submit" class="px-4 py-2 bg-green-500 rounded">+</button> }
                { Boolean(myRating) && <button type="submit" class="px-4 py-2 bg-yellow-500 rounded">&</button> }
            </form>
        </div>
    </div>
</div>
