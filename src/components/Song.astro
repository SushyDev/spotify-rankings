---
import DB from '@utils/db.js'

const { user } = Astro.locals

if (!user) return Astro.redirect('/401')

const { track } = Astro.props

const groupId = Astro.params.group_id
const playlistId = Astro.params.playlist_id

const image = track?.album?.images[1]?.url

const sql = 'SELECT * FROM `song_ratings` WHERE `song_id` = ? AND `group_id` = ? AND `playlist_id` = ?'
const args = [track.id, groupId, playlistId]

async function getRatings() {
    const result = await DB.execute({ sql, args });

    if (result.rows.length === 0) return []

    return result.rows.map((row) => {
        if (typeof row.rating !== 'number') return null

        return {
            user_id: row.user_id,
            rating: row.rating,
        }
    }).filter(Boolean)
}

const ratings = await getRatings()

const myRating = ratings.find((rating) => rating?.user_id === user.id)
const averageRating = ratings.length > 0 ? ratings.reduce((acc, rating) => acc + (rating?.rating || 0), 0) / ratings.length : 'No ratings'
---
<div class="p-2 rounded-lg flex">
    { image && <img src={ image } class="object-cover h-32 rounded-lg" /> }
    <div class="pl-4">
        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900">{ track.name }</h5>
        <p class="font-normal text-gray-700 dark:text-gray-400">
            { track.artists.map((artist) => (
            <span class="inline-block mr-2 text-sm font-medium text-gray-700 dark:text-gray-400">{ artist.name }</span>
            )) }
        </p>
    </div>
    <div class="ml-auto">
        <p>Average: { averageRating }</p>
        <form action="/api/song/rating/add" method="post">
            <input type="hidden" name="song_id" value={ track.id } />
            <input type="hidden" name="group_id" value={ groupId } />
            <input type="hidden" name="playlist_id" value={ playlistId } />
            <input type="number" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 disabled:bg-blue-600" name="rating" min="1" max="10" value={ myRating?.rating || "0" } disabled={Boolean(myRating)} />
            { !Boolean(myRating) && <button type="submit">Add rating</button> }
        </form>
    </div>
</div>
